query FindExchange($id: ID!) {
  exchange(id: $id) {
    public
    name
    colour
    userPermissions {
      id
      user {
        name
        id
        email
        profilePicUrl
      }
      permission
    }
    instruments {
      id
      name
      tickSizeMin
      positionLimit
      bondFixedPrice
      bondVolatility
    }
  }
}

mutation AddInstrument(
  $exchangeId: String!
  $instrumentType: String!
  $name: String!
  $positionLimit: Int!
  $tickSize: Int!
  $bondFixedPrice: Int!
  $bondVolatility: Int!
) {
  addInstrument(
    exchangeId: $exchangeId
    instrument: {
      instrumentType: $instrumentType
      name: $name
      positionLimit: $positionLimit
      tickSizeMin: $tickSize
      bondFixedPrice: $bondFixedPrice
      bondVolatility: $bondVolatility
    }
  ) {
    id
    name
    tickSizeMin
    positionLimit
    bondFixedPrice
    bondVolatility
  }
}
mutation EditInstrument(
  $exchangeId: String!
  $instrumentId: String!
  $instrumentType: String!
  $name: String!
  $positionLimit: Int!
  $tickSize: Int!
  $bondFixedPrice: Int!
  $bondVolatility: Int!
) {
  editInstrument(
    exchangeId: $exchangeId
    instrumentId: $instrumentId
    instrument: {
      instrumentType: $instrumentType
      name: $name
      positionLimit: $positionLimit
      tickSizeMin: $tickSize
      bondFixedPrice: $bondFixedPrice
      bondVolatility: $bondVolatility
    }
  ) {
    id
    name
    tickSizeMin
    positionLimit
    bondFixedPrice
    bondVolatility
  }
}
mutation DeleteInstrument($id: String!) {
  deleteInstrument(instrumentId: $id) {
    id
  }
}

mutation CreateInvite($exchangeId: String!, $userId: String!) {
  createInvite(
    createInviteInput: { exchangeId: $exchangeId, userId: $userId }
  ) {
    exchangeId
    userId
    id
  }
}

query CheckInvite($id: ID!) {
  checkInvite(id: $id)
}

mutation JoinExchange($id: String!) {
  joinExchange(id: $id) {
    exchange {
      id
    }
  }
}

mutation CreateTestExchange {
  createTestExchange {
    id
  }
}

mutation CreateExchange($name: String!, $color: Int!) {
  createExchange(exchangeData: { exchangeColor: $color, exchangeName: $name }) {
    id
    name
    colour
    userPermissions {
      id
    }
  }
}

mutation DeleteExchange($id: String!) {
  deleteExchange(exchangeId: $id) {
    id
  }
}

mutation EditExchange($id: String!, $name: String!, $color: Int!) {
  editExchange(
    exchangeId: $id
    exchangeData: { exchangeColor: $color, exchangeName: $name }
  ) {
    id
    name
    colour
  }
}
